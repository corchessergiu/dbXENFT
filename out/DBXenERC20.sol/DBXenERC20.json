{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101806040523480156200001257600080fd5b506040518060400160405280601681526020017f444258656e20546f6b656e206f6e20506f6c79676f6e0000000000000000000081525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601681526020017f444258656e20546f6b656e206f6e20506f6c79676f6e000000000000000000008152506040518060400160405280600481526020016336a22c2760e11b8152508160039081620000c89190620003a2565b506004620000d78282620003a2565b50620000e991508390506005620001b6565b61012052620000fa816006620001b6565b61014052815160208084019190912060e052815190820120610100524660a0526200018860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525033610160819052620001b0906a0424e8a4eaca5ed7400000620001ef565b62000505565b6000602083511015620001d657620001ce83620002b6565b9050620001e9565b81620001e38482620003a2565b5060ff90505b92915050565b6001600160a01b0382166200024b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600260008282546200025f91906200046e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f81511115620002e4578260405163305a27a960e01b815260040162000242919062000490565b8051620002f182620004e0565b179392505050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200032957607f821691505b6020821081036200034a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f957600081815260208120601f850160051c81016020861015620003795750805b601f850160051c820191505b818110156200039a5782815560010162000385565b505050505050565b81516001600160401b03811115620003be57620003be620002fe565b620003d681620003cf845462000314565b8462000350565b602080601f8311600181146200040e5760008415620003f55750858301515b600019600386901b1c1916600185901b1785556200039a565b600085815260208120601f198616915b828110156200043f578886015182559484019460019091019084016200041e565b50858210156200045e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620001e957634e487b7160e01b600052601160045260246000fd5b600060208083528351808285015260005b81811015620004bf57858101830151858201604001528201620004a1565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200034a5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516101605161130d62000572600039600081816101fc0152610461015260006103f7015260006103cc01526000610b8301526000610b5b01526000610ab601526000610ae001526000610b0a015261130d6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80637ecebe00116100a25780639a49090e116100715780639a49090e1461023e578063a457c2d714610253578063a9059cbb14610266578063d505accf14610279578063dd62ed3e1461028c57600080fd5b80637ecebe00146101c957806384b0196e146101dc5780638da5cb5b146101f757806395d89b411461023657600080fd5b8063313ce567116100de578063313ce567146101765780633644e51514610185578063395093511461018d57806370a08231146101a057600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861029f565b6040516101259190611079565b60405180910390f35b61014161013c3660046110af565b610331565b6040519015158152602001610125565b6002545b604051908152602001610125565b6101416101713660046110d9565b61034b565b60405160128152602001610125565b61015561036f565b61014161019b3660046110af565b61037e565b6101556101ae366004611115565b6001600160a01b031660009081526020819052604090205490565b6101556101d7366004611115565b6103a0565b6101e46103be565b6040516101259796959493929190611130565b61021e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610125565b610118610447565b61025161024c3660046110af565b610456565b005b6101416102613660046110af565b61054f565b6101416102743660046110af565b6105ca565b6102516102873660046111c6565b6105d8565b61015561029a366004611239565b61073c565b6060600380546102ae9061126c565b80601f01602080910402602001604051908101604052809291908181526020018280546102da9061126c565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60003361033f818585610767565b60019150505b92915050565b60003361035985828561088b565b610364858585610905565b506001949350505050565b6000610379610aa9565b905090565b60003361033f818585610391838361073c565b61039b91906112a0565b610767565b6001600160a01b038116600090815260076020526040812054610345565b6000606080828080836103f27f00000000000000000000000000000000000000000000000000000000000000006005610bd4565b61041d7f00000000000000000000000000000000000000000000000000000000000000006006610bd4565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102ae9061126c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104df5760405162461bcd60e51b8152602060048201526024808201527f444258656e3a2063616c6c6572206973206e6f7420444258656e20636f6e747260448201526330b1ba1760e11b60648201526084015b60405180910390fd5b6a0424e8a4eaca5ed74000006104f460025490565b106105415760405162461bcd60e51b815260206004820181905260248201527f444258656e3a206d617820737570706c7920616c7265616479206d696e74656460448201526064016104d6565b61054b8282610c7f565b5050565b6000338161055d828661073c565b9050838110156105bd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104d6565b6103648286868403610767565b60003361033f818585610905565b834211156106285760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104d6565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106578c610d3e565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006106b282610d66565b905060006106c282878787610d93565b9050896001600160a01b0316816001600160a01b0316146107255760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104d6565b6107308a8a8a610767565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166107c95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d6565b6001600160a01b03821661082a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610897848461073c565b905060001981146108ff57818110156108f25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104d6565b6108ff8484848403610767565b50505050565b6001600160a01b0383166109695760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d6565b6001600160a01b0382166109cb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d6565b6001600160a01b03831660009081526020819052604090205481811015610a435760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108ff565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b0257507f000000000000000000000000000000000000000000000000000000000000000046145b15610b2c57507f000000000000000000000000000000000000000000000000000000000000000090565b610379604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606060ff8314610bee57610be783610dbb565b9050610345565b818054610bfa9061126c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c269061126c565b8015610c735780601f10610c4857610100808354040283529160200191610c73565b820191906000526020600020905b815481529060010190602001808311610c5657829003601f168201915b50505050509050610345565b6001600160a01b038216610cd55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d6565b8060026000828254610ce791906112a0565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000610345610d73610aa9565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610da487878787610dfa565b91509150610db181610ebe565b5095945050505050565b60606000610dc88361100b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610e315750600090506003610eb5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e85573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610eae57600060019250925050610eb5565b9150600090505b94509492505050565b6000816004811115610ed257610ed26112c1565b03610eda5750565b6001816004811115610eee57610eee6112c1565b03610f3b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104d6565b6002816004811115610f4f57610f4f6112c1565b03610f9c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104d6565b6003816004811115610fb057610fb06112c1565b036110085760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104d6565b50565b600060ff8216601f81111561034557604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b818110156110595760208185018101518683018201520161103d565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061108c6020830184611033565b9392505050565b80356001600160a01b03811681146110aa57600080fd5b919050565b600080604083850312156110c257600080fd5b6110cb83611093565b946020939093013593505050565b6000806000606084860312156110ee57600080fd5b6110f784611093565b925061110560208501611093565b9150604084013590509250925092565b60006020828403121561112757600080fd5b61108c82611093565b60ff60f81b881681526000602060e08184015261115060e084018a611033565b8381036040850152611162818a611033565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156111b457835183529284019291840191600101611198565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156111e157600080fd5b6111ea88611093565b96506111f860208901611093565b95506040880135945060608801359350608088013560ff8116811461121c57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561124c57600080fd5b61125583611093565b915061126360208401611093565b90509250929050565b600181811c9082168061128057607f821691505b602082108103610d6057634e487b7160e01b600052602260045260246000fd5b8082018082111561034557634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122074854d60060d41d71ac43ef00c7d97ec4bee56d3764ea3a3cf770c4b77fc6f2964736f6c63430008150033",
    "sourceMap": "367:1057:2:-:0;;;618:172;;;;;;;;;;1817:52:33;;;;;;;;;;;;;;;;;1856:4;3178:431:50;;;;;;;;;;;;;-1:-1:-1;;;3178:431:50;;;1980:113:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:31;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:31;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;3251:45:50;;-1:-1:-1;3251:4:50;;-1:-1:-1;3282:13:50;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;2994:25:60;3035:18;;;3028:34;;;;3078:18;;;3071:34;4106:13:50;3121:18:60;;;3114:34;4129:4:50;3164:19:60;;;3157:61;4018:7:50;;2966:19:60;;4054:81:50;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:50;3575:27;;-1:-1:-1;732:10:2::2;724:18;::::0;;;752:31:::2;::::0;769:13:::2;752:5;:31::i;:::-;367:1057:::0;;2895:341:46;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:46;;-1:-1:-1;3014:216:46;2895:341;;;;:::o;8520:535:31:-;-1:-1:-1;;;;;8603:21:31;;8595:65;;;;-1:-1:-1;;;8595:65:31;;3431:2:60;8595:65:31;;;3413:21:60;3470:2;3450:18;;;3443:30;3509:33;3489:18;;;3482:61;3560:18;;8595:65:31;;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:31;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;3962:25:60;;;8952:37:31;;3935:18:60;8952:37:31;;;;;;;8520:535;;:::o;1689:286:46:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:46;;;;;;;;:::i;1817:72::-;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:46:o;12073:91:31:-;;;;:::o;14:127:60:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:60;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:60;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:60;;;2580:26;2531:89;-1:-1:-1;;1335:1:60;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:60;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:60;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:60;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:60:o;3589:222::-;3654:9;;;3675:10;;;3672:133;;;3727:10;3722:3;3718:20;3715:1;3708:31;3762:4;3759:1;3752:15;3790:4;3787:1;3780:15;3998:548;4110:4;4139:2;4168;4157:9;4150:21;4200:6;4194:13;4243:6;4238:2;4227:9;4223:18;4216:34;4268:1;4278:140;4292:6;4289:1;4286:13;4278:140;;;4387:14;;;4383:23;;4377:30;4353:17;;;4372:2;4349:26;4342:66;4307:10;;4278:140;;;4282:3;4467:1;4462:2;4453:6;4442:9;4438:22;4434:31;4427:42;4537:2;4530;4526:7;4521:2;4513:6;4509:15;4505:29;4494:9;4490:45;4486:54;4478:62;;;;3998:548;;;;:::o;4551:297::-;4669:12;;4716:4;4705:16;;;4699:23;;4669:12;4734:16;;4731:111;;;-1:-1:-1;;4808:4:60;4804:17;;;;4801:1;4797:25;4793:38;4782:50;;4551:297;-1:-1:-1;4551:297:60:o;:::-;367:1057:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80637ecebe00116100a25780639a49090e116100715780639a49090e1461023e578063a457c2d714610253578063a9059cbb14610266578063d505accf14610279578063dd62ed3e1461028c57600080fd5b80637ecebe00146101c957806384b0196e146101dc5780638da5cb5b146101f757806395d89b411461023657600080fd5b8063313ce567116100de578063313ce567146101765780633644e51514610185578063395093511461018d57806370a08231146101a057600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861029f565b6040516101259190611079565b60405180910390f35b61014161013c3660046110af565b610331565b6040519015158152602001610125565b6002545b604051908152602001610125565b6101416101713660046110d9565b61034b565b60405160128152602001610125565b61015561036f565b61014161019b3660046110af565b61037e565b6101556101ae366004611115565b6001600160a01b031660009081526020819052604090205490565b6101556101d7366004611115565b6103a0565b6101e46103be565b6040516101259796959493929190611130565b61021e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610125565b610118610447565b61025161024c3660046110af565b610456565b005b6101416102613660046110af565b61054f565b6101416102743660046110af565b6105ca565b6102516102873660046111c6565b6105d8565b61015561029a366004611239565b61073c565b6060600380546102ae9061126c565b80601f01602080910402602001604051908101604052809291908181526020018280546102da9061126c565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60003361033f818585610767565b60019150505b92915050565b60003361035985828561088b565b610364858585610905565b506001949350505050565b6000610379610aa9565b905090565b60003361033f818585610391838361073c565b61039b91906112a0565b610767565b6001600160a01b038116600090815260076020526040812054610345565b6000606080828080836103f27f00000000000000000000000000000000000000000000000000000000000000006005610bd4565b61041d7f00000000000000000000000000000000000000000000000000000000000000006006610bd4565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102ae9061126c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104df5760405162461bcd60e51b8152602060048201526024808201527f444258656e3a2063616c6c6572206973206e6f7420444258656e20636f6e747260448201526330b1ba1760e11b60648201526084015b60405180910390fd5b6a0424e8a4eaca5ed74000006104f460025490565b106105415760405162461bcd60e51b815260206004820181905260248201527f444258656e3a206d617820737570706c7920616c7265616479206d696e74656460448201526064016104d6565b61054b8282610c7f565b5050565b6000338161055d828661073c565b9050838110156105bd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104d6565b6103648286868403610767565b60003361033f818585610905565b834211156106285760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104d6565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106578c610d3e565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006106b282610d66565b905060006106c282878787610d93565b9050896001600160a01b0316816001600160a01b0316146107255760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104d6565b6107308a8a8a610767565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166107c95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d6565b6001600160a01b03821661082a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610897848461073c565b905060001981146108ff57818110156108f25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104d6565b6108ff8484848403610767565b50505050565b6001600160a01b0383166109695760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d6565b6001600160a01b0382166109cb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d6565b6001600160a01b03831660009081526020819052604090205481811015610a435760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108ff565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b0257507f000000000000000000000000000000000000000000000000000000000000000046145b15610b2c57507f000000000000000000000000000000000000000000000000000000000000000090565b610379604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606060ff8314610bee57610be783610dbb565b9050610345565b818054610bfa9061126c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c269061126c565b8015610c735780601f10610c4857610100808354040283529160200191610c73565b820191906000526020600020905b815481529060010190602001808311610c5657829003601f168201915b50505050509050610345565b6001600160a01b038216610cd55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d6565b8060026000828254610ce791906112a0565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000610345610d73610aa9565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610da487878787610dfa565b91509150610db181610ebe565b5095945050505050565b60606000610dc88361100b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610e315750600090506003610eb5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e85573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610eae57600060019250925050610eb5565b9150600090505b94509492505050565b6000816004811115610ed257610ed26112c1565b03610eda5750565b6001816004811115610eee57610eee6112c1565b03610f3b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104d6565b6002816004811115610f4f57610f4f6112c1565b03610f9c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104d6565b6003816004811115610fb057610fb06112c1565b036110085760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104d6565b50565b600060ff8216601f81111561034557604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b818110156110595760208185018101518683018201520161103d565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061108c6020830184611033565b9392505050565b80356001600160a01b03811681146110aa57600080fd5b919050565b600080604083850312156110c257600080fd5b6110cb83611093565b946020939093013593505050565b6000806000606084860312156110ee57600080fd5b6110f784611093565b925061110560208501611093565b9150604084013590509250925092565b60006020828403121561112757600080fd5b61108c82611093565b60ff60f81b881681526000602060e08184015261115060e084018a611033565b8381036040850152611162818a611033565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156111b457835183529284019291840191600101611198565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156111e157600080fd5b6111ea88611093565b96506111f860208901611093565b95506040880135945060608801359350608088013560ff8116811461121c57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561124c57600080fd5b61125583611093565b915061126360208401611093565b90509250929050565b600181811c9082168061128057607f821691505b602082108103610d6057634e487b7160e01b600052602260045260246000fd5b8082018082111561034557634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122074854d60060d41d71ac43ef00c7d97ec4bee56d3764ea3a3cf770c4b77fc6f2964736f6c63430008150033",
    "sourceMap": "367:1057:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:60;;1262:22;1244:41;;1232:2;1217:18;4444:197:31;1104:187:60;3255:106:31;3342:12;;3255:106;;;1442:25:60;;;1430:2;1415:18;3255:106:31;1296:177:60;5203:256:31;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1953:36:60;;1941:2;1926:18;3104:91:31;1811:184:60;2867:113:33;;;:::i;5854:234:31:-;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:31;3493:7;3519:18;;;;;;;;;;;;3419:125;2617:126:33;;;;;;:::i;:::-;;:::i;5021:633:50:-;;;:::i;:::-;;;;;;;;;;;;;:::i;480:30:2:-;;;;;;;;-1:-1:-1;;;;;3801:32:60;;;3783:51;;3771:2;3756:18;480:30:2;3637:203:60;2369:102:31;;;:::i;1141:281:2:-;;;;;;:::i;:::-;;:::i;:::-;;6575:427:31;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1930:626:33:-;;;;;;:::i;:::-;;:::i;3987:149:31:-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:44;4581:32:31;719:10:44;4597:7:31;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:44;5356:38:31;5372:4;719:10:44;5387:6:31;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:31;;5203:256;-1:-1:-1;;;;5203:256:31:o;2867:113:33:-;2927:7;2953:20;:18;:20::i;:::-;2946:27;;2867:113;:::o;5854:234:31:-;5942:4;719:10:44;5996:64:31;719:10:44;6012:7:31;6049:10;6021:25;719:10:44;6012:7:31;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2617:126:33:-;-1:-1:-1;;;;;2712:14:33;;2686:7;2712:14;;;:7;:14;;;;;918::45;2712:24:33;827:112:45;5021:633:50;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5454:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:50;;;-1:-1:-1;5376:271:50;;-1:-1:-1;5543:13:50;;-1:-1:-1;5578:4:50;;-1:-1:-1;5605:1:50;-1:-1:-1;5621:16:50;-1:-1:-1;5376:271:50;-1:-1:-1;5021:633:50:o;2369:102:31:-;2425:13;2457:7;2450:14;;;;;:::i;1141:281:2:-;1221:10;-1:-1:-1;;;;;1235:5:2;1221:19;;1213:68;;;;-1:-1:-1;;;1213:68:2;;5754:2:60;1213:68:2;;;5736:21:60;5793:2;5773:18;;;5766:30;5832:34;5812:18;;;5805:62;-1:-1:-1;;;5883:18:60;;;5876:34;5927:19;;1213:68:2;;;;;;;;;1321:25;1299:19;3342:12:31;;;3255:106;1299:19:2;:47;1291:92;;;;-1:-1:-1;;;1291:92:2;;6159:2:60;1291:92:2;;;6141:21:60;;;6178:18;;;6171:30;6237:34;6217:18;;;6210:62;6289:18;;1291:92:2;5957:356:60;1291:92:2;1393:22;1399:7;1408:6;1393:5;:22::i;:::-;1141:281;;:::o;6575:427:31:-;6668:4;719:10:44;6668:4:31;6749:25;719:10:44;6766:7:31;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:31;;6520:2:60;6784:85:31;;;6502:21:60;6559:2;6539:18;;;6532:30;6598:34;6578:18;;;6571:62;-1:-1:-1;;;6649:18:60;;;6642:35;6694:19;;6784:85:31;6318:401:60;6784:85:31;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:44;3873:28:31;719:10:44;3890:2:31;3894:6;3873:9;:28::i;1930:626:33:-;2165:8;2146:15;:27;;2138:69;;;;-1:-1:-1;;;2138:69:33;;6926:2:60;2138:69:33;;;6908:21:60;6965:2;6945:18;;;6938:30;7004:31;6984:18;;;6977:59;7053:18;;2138:69:33;6724:353:60;2138:69:33;2218:18;1125:95;2278:5;2285:7;2294:5;2301:16;2311:5;2301:9;:16::i;:::-;2249:79;;;;;;7369:25:60;;;;-1:-1:-1;;;;;7468:15:60;;;7448:18;;;7441:43;7520:15;;;;7500:18;;;7493:43;7552:18;;;7545:34;7595:19;;;7588:35;7639:19;;;7632:35;;;7341:19;;2249:79:33;;;;;;;;;;;;2239:90;;;;;;2218:111;;2340:12;2355:28;2372:10;2355:16;:28::i;:::-;2340:43;;2394:14;2411:28;2425:4;2431:1;2434;2437;2411:13;:28::i;:::-;2394:45;;2467:5;-1:-1:-1;;;;;2457:15:33;:6;-1:-1:-1;;;;;2457:15:33;;2449:58;;;;-1:-1:-1;;;2449:58:33;;7880:2:60;2449:58:33;;;7862:21:60;7919:2;7899:18;;;7892:30;7958:32;7938:18;;;7931:60;8008:18;;2449:58:33;7678:354:60;2449:58:33;2518:31;2527:5;2534:7;2543:5;2518:8;:31::i;:::-;2128:428;;;1930:626;;;;;;;:::o;3987:149:31:-;-1:-1:-1;;;;;4102:18:31;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:31;;10550:68;;;;-1:-1:-1;;;10550:68:31;;8239:2:60;10550:68:31;;;8221:21:60;8278:2;8258:18;;;8251:30;8317:34;8297:18;;;8290:62;-1:-1:-1;;;8368:18:60;;;8361:34;8412:19;;10550:68:31;8037:400:60;10550:68:31;-1:-1:-1;;;;;10636:21:31;;10628:68;;;;-1:-1:-1;;;10628:68:31;;8644:2:60;10628:68:31;;;8626:21:60;8683:2;8663:18;;;8656:30;8722:34;8702:18;;;8695:62;-1:-1:-1;;;8773:18:60;;;8766:32;8815:19;;10628:68:31;8442:398:60;10628:68:31;-1:-1:-1;;;;;10707:18:31;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1442:25:60;;;10758:32:31;;1415:18:60;10758:32:31;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:31;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:31;;9047:2:60;11297:68:31;;;9029:21:60;9086:2;9066:18;;;9059:30;9125:31;9105:18;;;9098:59;9174:18;;11297:68:31;8845:353:60;11297:68:31;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:31;;7544:68;;;;-1:-1:-1;;;7544:68:31;;9405:2:60;7544:68:31;;;9387:21:60;9444:2;9424:18;;;9417:30;9483:34;9463:18;;;9456:62;-1:-1:-1;;;9534:18:60;;;9527:35;9579:19;;7544:68:31;9203:401:60;7544:68:31;-1:-1:-1;;;;;7630:16:31;;7622:64;;;;-1:-1:-1;;;7622:64:31;;9811:2:60;7622:64:31;;;9793:21:60;9850:2;9830:18;;;9823:30;9889:34;9869:18;;;9862:62;-1:-1:-1;;;9940:18:60;;;9933:33;9983:19;;7622:64:31;9609:399:60;7622:64:31;-1:-1:-1;;;;;7768:15:31;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:31;;10215:2:60;7793:72:31;;;10197:21:60;10254:2;10234:18;;;10227:30;10293:34;10273:18;;;10266:62;-1:-1:-1;;;10344:18:60;;;10337:36;10390:19;;7793:72:31;10013:402:60;7793:72:31;-1:-1:-1;;;;;7899:15:31;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1442:25:60;;;8114:13:31;;8163:26;;1415:18:60;8163:26:31;;;;;;;8200:37;12073:91;3695:262:50;3748:7;3779:4;-1:-1:-1;;;;;3788:11:50;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:50;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;11039:25:60;4077:11:50;11080:18:60;;;11073:34;;;;4090:14:50;11123:18:60;;;11116:34;4106:13:50;11166:18:60;;;11159:34;4129:4:50;11209:19:60;;;11202:61;4018:7:50;;11011:19:60;;4054:81:50;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3367:268:46;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8520:535:31;-1:-1:-1;;;;;8603:21:31;;8595:65;;;;-1:-1:-1;;;8595:65:31;;10622:2:60;8595:65:31;;;10604:21:60;10661:2;10641:18;;;10634:30;10700:33;10680:18;;;10673:61;10751:18;;8595:65:31;10420:355:60;8595:65:31;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:31;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1442:25:60;;;8952:37:31;;1415:18:60;8952:37:31;;;;;;;1141:281:2;;:::o;3111:203:33:-;-1:-1:-1;;;;;3231:14:33;;3171:15;3231:14;;;:7;:14;;;;;918::45;;1050:1;1032:19;;;;918:14;3290:17:33;3188:126;3111:203;;;:::o;4768:165:50:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:49;8530:11;-1:-1:-1;;;8554:23:49;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;6598:232;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;-1:-1:-1;6814:9:49;6598:232;-1:-1:-1;;;;;6598:232:49:o;2059:405:46:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:46;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:46;;;-1:-1:-1;2416:4:46;2407:14;;2400:28;;;;-1:-1:-1;2371:16:46;2059:405::o;5009:1456:49:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:49;;-1:-1:-1;6123:30:49;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;11501:25:60;;;11574:4;11562:17;;11542:18;;;11535:45;;;;11596:18;;;11589:34;;;11639:18;;;11632:34;;;6276:24:49;;11473:19:60;;6276:24:49;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:49;;-1:-1:-1;;6276:24:49;;;-1:-1:-1;;;;;;;6314:20:49;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:49;;-1:-1:-1;5009:1456:49;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:49;;12011:2:60;788:34:49;;;11993:21:60;12050:2;12030:18;;;12023:30;12089:26;12069:18;;;12062:54;12133:18;;788:34:49;11809:348:60;730:345:49;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:49;;12364:2:60;903:41:49;;;12346:21:60;12403:2;12383:18;;;12376:30;12442:33;12422:18;;;12415:61;12493:18;;903:41:49;12162:355:60;839:236:49;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:49;;12724:2:60;1020:44:49;;;12706:21:60;12763:2;12743:18;;;12736:30;12802:34;12782:18;;;12775:62;-1:-1:-1;;;12853:18:60;;;12846:32;12895:19;;1020:44:49;12522:398:60;961:114:49;570:511;:::o;2536:245:46:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:46;;;;;;;;;;;14:423:60;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:60:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:60;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:60:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:186::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;2333:29;2352:9;2333:29;:::i;2373:1259::-;2779:3;2774;2770:13;2762:6;2758:26;2747:9;2740:45;2721:4;2804:2;2842:3;2837:2;2826:9;2822:18;2815:31;2869:46;2910:3;2899:9;2895:19;2887:6;2869:46;:::i;:::-;2963:9;2955:6;2951:22;2946:2;2935:9;2931:18;2924:50;2997:33;3023:6;3015;2997:33;:::i;:::-;3061:2;3046:18;;3039:34;;;-1:-1:-1;;;;;3110:32:60;;3104:3;3089:19;;3082:61;3130:3;3159:19;;3152:35;;;3224:22;;;3218:3;3203:19;;3196:51;3296:13;;3318:22;;;3394:15;;;;-1:-1:-1;3356:15:60;;;;-1:-1:-1;3437:169:60;3451:6;3448:1;3445:13;3437:169;;;3512:13;;3500:26;;3581:15;;;;3546:12;;;;3473:1;3466:9;3437:169;;;-1:-1:-1;3623:3:60;;2373:1259;-1:-1:-1;;;;;;;;;;;;2373:1259:60:o;3845:693::-;3956:6;3964;3972;3980;3988;3996;4004;4057:3;4045:9;4036:7;4032:23;4028:33;4025:53;;;4074:1;4071;4064:12;4025:53;4097:29;4116:9;4097:29;:::i;:::-;4087:39;;4145:38;4179:2;4168:9;4164:18;4145:38;:::i;:::-;4135:48;;4230:2;4219:9;4215:18;4202:32;4192:42;;4281:2;4270:9;4266:18;4253:32;4243:42;;4335:3;4324:9;4320:19;4307:33;4380:4;4373:5;4369:16;4362:5;4359:27;4349:55;;4400:1;4397;4390:12;4349:55;3845:693;;;;-1:-1:-1;3845:693:60;;;;4423:5;4475:3;4460:19;;4447:33;;-1:-1:-1;4527:3:60;4512:19;;;4499:33;;3845:693;-1:-1:-1;;3845:693:60:o;4543:260::-;4611:6;4619;4672:2;4660:9;4651:7;4647:23;4643:32;4640:52;;;4688:1;4685;4678:12;4640:52;4711:29;4730:9;4711:29;:::i;:::-;4701:39;;4759:38;4793:2;4782:9;4778:18;4759:38;:::i;:::-;4749:48;;4543:260;;;;;:::o;4808:380::-;4887:1;4883:12;;;;4930;;;4951:61;;5005:4;4997:6;4993:17;4983:27;;4951:61;5058:2;5050:6;5047:14;5027:18;5024:38;5021:161;;5104:10;5099:3;5095:20;5092:1;5085:31;5139:4;5136:1;5129:15;5167:4;5164:1;5157:15;5193:222;5258:9;;;5279:10;;;5276:133;;;5331:10;5326:3;5322:20;5319:1;5312:31;5366:4;5363:1;5356:15;5394:4;5391:1;5384:15;11677:127;11738:10;11733:3;11729:20;11726:1;11719:31;11769:4;11766:1;11759:15;11793:4;11790:1;11783:15",
    "linkReferences": {},
    "immutableReferences": {
      "13218": [
        {
          "start": 2826,
          "length": 32
        }
      ],
      "13220": [
        {
          "start": 2784,
          "length": 32
        }
      ],
      "13222": [
        {
          "start": 2742,
          "length": 32
        }
      ],
      "13224": [
        {
          "start": 2907,
          "length": 32
        }
      ],
      "13226": [
        {
          "start": 2947,
          "length": 32
        }
      ],
      "13229": [
        {
          "start": 972,
          "length": 32
        }
      ],
      "13232": [
        {
          "start": 1015,
          "length": 32
        }
      ],
      "2016": [
        {
          "start": 508,
          "length": 32
        },
        {
          "start": 1121,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "eip712Domain()": "84b0196e",
    "increaseAllowance(address,uint256)": "39509351",
    "mintReward(address,uint256)": "9a49090e",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintReward(address,uint256)\":{\"params\":{\"account\":\"the address of the reward token reciever\",\"amount\":\"wei to be minted\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets the owner address.  Called from within the DBXen.sol constructor.\"},\"mintReward(address,uint256)\":{\"notice\":\"The total supply is naturally capped by the distribution algorithm  implemented by the main dbxen contract, however an additional check  that will never be triggered is added to reassure the reader. \"},\"owner()\":{\"notice\":\"The address of the DBXen.sol contract instance.\"}},\"notice\":\"Reward token contract to be used by the dbxen protocol. The entire amount is minted by the main dbxen contract  (DBXen.sol - which is the owner of this contract) directly to an account when it claims rewards.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DBXenERC20.sol\":\"DBXenERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@faircrypto/=node_modules/@faircrypto/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":abdk-libraries-solidity/=node_modules/abdk-libraries-solidity/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":operator-filter-registry/=node_modules/operator-filter-registry/\"]},\"sources\":{\"contracts/DBXenERC20.sol\":{\"keccak256\":\"0x1214bcdf69d0259caa9099d2887c0036ea859f95e9eaf0472b837c6d98c10156\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed2df1a3821c031127221265ab10333262c6f4ebf2089fc4b0fc8a143e575262\",\"dweb:/ipfs/QmRex3eNwAMU49dFqTLpTAqn5ULdZW14KKJ1jKpgyvt9Cx\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xbe43b6f1e04b5215939f1a76fa612c275b75948f6e7bf25808fb91e99444a33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86d672d9a23f3502472f6827af8e8116a6412b28c234dcfcb201413055cb0159\",\"dweb:/ipfs/Qmcts6GvEMHuyikwDHtcTdTW4SVP1k66KpUMRcCovWbLN8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintReward"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mintReward(address,uint256)": {
            "params": {
              "account": "the address of the reward token reciever",
              "amount": "wei to be minted"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Sets the owner address.  Called from within the DBXen.sol constructor."
          },
          "mintReward(address,uint256)": {
            "notice": "The total supply is naturally capped by the distribution algorithm  implemented by the main dbxen contract, however an additional check  that will never be triggered is added to reassure the reader. "
          },
          "owner()": {
            "notice": "The address of the DBXen.sol contract instance."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@faircrypto/=node_modules/@faircrypto/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "abdk-libraries-solidity/=node_modules/abdk-libraries-solidity/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "operator-filter-registry/=node_modules/operator-filter-registry/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/DBXenERC20.sol": "DBXenERC20"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/DBXenERC20.sol": {
        "keccak256": "0x1214bcdf69d0259caa9099d2887c0036ea859f95e9eaf0472b837c6d98c10156",
        "urls": [
          "bzz-raw://ed2df1a3821c031127221265ab10333262c6f4ebf2089fc4b0fc8a143e575262",
          "dweb:/ipfs/QmRex3eNwAMU49dFqTLpTAqn5ULdZW14KKJ1jKpgyvt9Cx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295",
        "urls": [
          "bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a",
          "dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xbe43b6f1e04b5215939f1a76fa612c275b75948f6e7bf25808fb91e99444a33f",
        "urls": [
          "bzz-raw://86d672d9a23f3502472f6827af8e8116a6412b28c234dcfcb201413055cb0159",
          "dweb:/ipfs/Qmcts6GvEMHuyikwDHtcTdTW4SVP1k66KpUMRcCovWbLN8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/DBXenERC20.sol",
    "id": 2072,
    "exportedSymbols": {
      "Context": [
        12206
      ],
      "Counters": [
        12280
      ],
      "DBXenERC20": [
        2071
      ],
      "ECDSA": [
        13201
      ],
      "EIP712": [
        13405
      ],
      "ERC20": [
        10029
      ],
      "ERC20Permit": [
        10279
      ],
      "IERC20": [
        10107
      ],
      "IERC20Metadata": [
        10304
      ],
      "IERC20Permit": [
        10340
      ],
      "IERC5267": [
        9374
      ],
      "Math": [
        14307
      ],
      "ShortString": [
        12285
      ],
      "ShortStrings": [
        12496
      ],
      "SignedMath": [
        14412
      ],
      "StorageSlot": [
        12606
      ],
      "Strings": [
        12835
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1392:2",
    "nodes": [
      {
        "id": 2009,
        "nodeType": "PragmaDirective",
        "src": "32:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 2010,
        "nodeType": "ImportDirective",
        "src": "58:78:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2072,
        "sourceUnit": 10344,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2071,
        "nodeType": "ContractDefinition",
        "src": "367:1057:2",
        "nodes": [
          {
            "id": 2016,
            "nodeType": "VariableDeclaration",
            "src": "480:30:2",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 2014,
              "nodeType": "StructuredDocumentation",
              "src": "409:66:2",
              "text": " The address of the DBXen.sol contract instance."
            },
            "functionSelector": "8da5cb5b",
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "505:5:2",
            "scope": 2071,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "480:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2039,
            "nodeType": "FunctionDefinition",
            "src": "618:172:2",
            "nodes": [],
            "body": {
              "id": 2038,
              "nodeType": "Block",
              "src": "714:76:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2027,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2016,
                      "src": "724:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2028,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "732:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "736:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "732:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "724:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "724:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2033,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "758:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "762:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "758:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35303130303030",
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "769:13:2",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5010000000000000000000000_by_1",
                          "typeString": "int_const 5010000000000000000000000"
                        },
                        "value": "5010000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5010000000000000000000000_by_1",
                          "typeString": "int_const 5010000000000000000000000"
                        }
                      ],
                      "id": 2032,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9846,
                      "src": "752:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "752:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2037,
                  "nodeType": "ExpressionStatement",
                  "src": "752:31:2"
                }
              ]
            },
            "documentation": {
              "id": 2017,
              "nodeType": "StructuredDocumentation",
              "src": "517:96:2",
              "text": " Sets the owner address. \n Called from within the DBXen.sol constructor."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "444258656e20546f6b656e206f6e20506f6c79676f6e",
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "638:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_97a7b0dfd0cf784ad786e1b01d0098be3eabbe7e0604105ce0ac40cdcfb8b29e",
                      "typeString": "literal_string \"DBXen Token on Polygon\""
                    },
                    "value": "DBXen Token on Polygon"
                  },
                  {
                    "hexValue": "6d44584e",
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "664:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_919d04038c5240a51a86360b9a2035e2fd016d84b8294fcdd31cdf3c5ae3cba7",
                      "typeString": "literal_string \"mDXN\""
                    },
                    "value": "mDXN"
                  }
                ],
                "id": 2022,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2019,
                  "name": "ERC20",
                  "nameLocations": [
                    "632:5:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10029,
                  "src": "632:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "632:39:2"
              },
              {
                "arguments": [
                  {
                    "hexValue": "444258656e20546f6b656e206f6e20506f6c79676f6e",
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "688:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_97a7b0dfd0cf784ad786e1b01d0098be3eabbe7e0604105ce0ac40cdcfb8b29e",
                      "typeString": "literal_string \"DBXen Token on Polygon\""
                    },
                    "value": "DBXen Token on Polygon"
                  }
                ],
                "id": 2025,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2023,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "676:11:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10279,
                  "src": "676:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "676:37:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:2:2"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:2"
            },
            "scope": 2071,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2070,
            "nodeType": "FunctionDefinition",
            "src": "1141:281:2",
            "nodes": [],
            "body": {
              "id": 2069,
              "nodeType": "Block",
              "src": "1203:219:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2048,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1221:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1225:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1221:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2050,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2016,
                          "src": "1235:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1221:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444258656e3a2063616c6c6572206973206e6f7420444258656e20636f6e74726163742e",
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1242:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f781d3481987496d431b28d196e70ea7a723a0425968a509374e1de4c6f57091",
                          "typeString": "literal_string \"DBXen: caller is not DBXen contract.\""
                        },
                        "value": "DBXen: caller is not DBXen contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f781d3481987496d431b28d196e70ea7a723a0425968a509374e1de4c6f57091",
                          "typeString": "literal_string \"DBXen: caller is not DBXen contract.\""
                        }
                      ],
                      "id": 2047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1213:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1213:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2056,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1299:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_DBXenERC20_$2071_$",
                                "typeString": "type(contract super DBXenERC20)"
                              }
                            },
                            "id": 2057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1305:11:2",
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9527,
                            "src": "1299:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1299:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "35303130303030303030303030303030303030303030303030",
                          "id": 2059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1321:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5010000000000000000000000_by_1",
                            "typeString": "int_const 5010000000000000000000000"
                          },
                          "value": "5010000000000000000000000"
                        },
                        "src": "1299:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444258656e3a206d617820737570706c7920616c7265616479206d696e746564",
                        "id": 2061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1348:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4f0e94787e773718af94253d5bef9957d7f03c3f4d86a096423fd19dc258fd3",
                          "typeString": "literal_string \"DBXen: max supply already minted\""
                        },
                        "value": "DBXen: max supply already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4f0e94787e773718af94253d5bef9957d7f03c3f4d86a096423fd19dc258fd3",
                          "typeString": "literal_string \"DBXen: max supply already minted\""
                        }
                      ],
                      "id": 2055,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1291:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:92:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:92:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2065,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2042,
                        "src": "1399:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2066,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "1408:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2064,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9846,
                      "src": "1393:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2068,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:22:2"
                }
              ]
            },
            "documentation": {
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "796:340:2",
              "text": " The total supply is naturally capped by the distribution algorithm \n implemented by the main dbxen contract, however an additional check \n that will never be triggered is added to reassure the reader.\n \n @param account the address of the reward token reciever\n @param amount wei to be minted"
            },
            "functionSelector": "9a49090e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintReward",
            "nameLocation": "1150:10:2",
            "parameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2042,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1169:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2070,
                  "src": "1161:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1186:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2070,
                  "src": "1178:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:33:2"
            },
            "returnParameters": {
              "id": 2046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:0:2"
            },
            "scope": 2071,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2012,
              "name": "ERC20Permit",
              "nameLocations": [
                "390:11:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10279,
              "src": "390:11:2"
            },
            "id": 2013,
            "nodeType": "InheritanceSpecifier",
            "src": "390:11:2"
          }
        ],
        "canonicalName": "DBXenERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2011,
          "nodeType": "StructuredDocumentation",
          "src": "138:228:2",
          "text": " Reward token contract to be used by the dbxen protocol.\n The entire amount is minted by the main dbxen contract \n (DBXen.sol - which is the owner of this contract)\n directly to an account when it claims rewards."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2071,
          10279,
          13405,
          9374,
          10340,
          10029,
          10304,
          10107,
          12206
        ],
        "name": "DBXenERC20",
        "nameLocation": "376:10:2",
        "scope": 2072,
        "usedErrors": [
          12293,
          12295
        ],
        "usedEvents": [
          9354,
          10041,
          10050
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 2
}